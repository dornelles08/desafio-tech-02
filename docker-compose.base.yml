services:
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    volumes:
      - kong-db-data:/var/lib/postgresql/data
    networks:
      - kong-net

  kong-migrations:
    image: kong:3.6
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    command: kong migrations bootstrap
    networks:
      - kong-net

  kong:
    image: kong:3.6
    container_name: kong
    depends_on:
      - kong-database
      - kong-migrations
      - order-service
      - payment-service
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000 # Public requests
      - 8001:8001 # Admin API
      - 8002:8002 # Admin UI
    networks:
      - kong-net

  kong-init:
    image: curlimages/curl:8.8.0
    container_name: kong-init
    depends_on:
      - kong
    entrypoint: ["/bin/sh", "-c"]
    command: /init/kong-init.sh
    volumes:
      - ./kong-init.sh:/init/kong-init.sh
    networks:
      - kong-net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672 # AMQP
      - 15672:15672 # UI
    networks:
      - kong-net

  postgres-order:
    image: postgres:13
    container_name: postgres-order
    environment:
      POSTGRES_USER: order
      POSTGRES_DB: order
      POSTGRES_PASSWORD: order
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - kong-net

  postgres-payment:
    image: postgres:13
    container_name: postgres-payment
    environment:
      POSTGRES_USER: payment
      POSTGRES_DB: payment
      POSTGRES_PASSWORD: payment
    volumes:
      - payment-db-data:/var/lib/postgresql/data
    networks:
      - kong-net

  order-service:
    build:
      context: ./micro-orders
    container_name: order-service
    depends_on:
      - postgres-order
      - rabbitmq
    environment:
      DATABASE_URL: postgres://order:order@postgres-order:5432/micro-order
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      ENV: "PRD"
      PORT: 3001
    networks:
      - kong-net

  payment-service:
    build:
      context: ./micro-payments
    container_name: payment-service
    depends_on:
      - postgres-payment
      - rabbitmq
    environment:
      DATABASE_URL: postgres://payment:payment@postgres-payment:5432/micro-payment
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      ENV: "PRD"
      PORT: 3002
    networks:
      - kong-net

  notification-service:
    build:
      context: ./micro-notifications
    container_name: notification-service
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      EMAIL_HOST: "ADICIONAR INFORMAÇÃO"
      EMAIL_PORT: "ADICIONAR INFORMAÇÃO"
      EMAIL_SECURE: "ADICIONAR INFORMAÇÃO"
      EMAIL_USER: "ADICIONAR INFORMAÇÃO"
      EMAIL_PASSWORD: "ADICIONAR INFORMAÇÃO"
      ENV: "PRD"
    networks:
      - kong-net

volumes:
  kong-db-data:
  order-db-data:
  payment-db-data:

networks:
  kong-net:
    driver: bridge
